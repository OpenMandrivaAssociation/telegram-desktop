diff --git a/Telegram/SourceFiles/calls/calls_call.cpp b/Telegram/SourceFiles/calls/calls_call.cpp
index 732c516..d272bf3 100644
--- a/Telegram/SourceFiles/calls/calls_call.cpp
+++ b/Telegram/SourceFiles/calls/calls_call.cpp
@@ -583,7 +583,7 @@ void Call::createAndStartController(const MTPDphoneCall &call) {
 #else // Q_OS_WIN
 		const auto callLogUtf = QFile::encodeName(callLogNative);
 		config.logFilePath.resize(callLogUtf.size());
-		ranges::copy(callLogUtf, config.logFilePath.begin());
+		::ranges::copy(callLogUtf, config.logFilePath.begin());
 #endif // Q_OS_WIN
 		QFile(callLogPath).remove();
 		QDir().mkpath(callLogFolder);
diff --git a/Telegram/SourceFiles/settings/settings_calls.cpp b/Telegram/SourceFiles/settings/settings_calls.cpp
index 56acbb9..c13a6e2 100644
--- a/Telegram/SourceFiles/settings/settings_calls.cpp
+++ b/Telegram/SourceFiles/settings/settings_calls.cpp
@@ -76,7 +76,7 @@ void Calls::setupContent(not_null<Window::SessionController*> controller) {
 			return tr::lng_settings_call_device_default(tr::now);
 		}
 		const auto &list = VoIP::EnumerateAudioOutputs();
-		const auto i = ranges::find(
+		const auto i = ::ranges::find(
 			list,
 			Global::CallOutputDeviceID(),
 			getId);
@@ -90,7 +90,7 @@ void Calls::setupContent(not_null<Window::SessionController*> controller) {
 			return tr::lng_settings_call_device_default(tr::now);
 		}
 		const auto &list = VoIP::EnumerateAudioInputs();
-		const auto i = ranges::find(
+		const auto i = ::ranges::find(
 			list,
 			Global::CallInputDeviceID(),
 			getId);
@@ -112,11 +112,11 @@ void Calls::setupContent(not_null<Window::SessionController*> controller) {
 		st::settingsButton
 	)->addClickHandler([=] {
 		const auto &devices = VoIP::EnumerateAudioOutputs();
-		const auto options = ranges::view::concat(
-			ranges::view::single(tr::lng_settings_call_device_default(tr::now)),
-			devices | ranges::view::transform(getName)
-		) | ranges::to_vector;
-		const auto i = ranges::find(
+		const auto options = ::ranges::view::concat(
+			::ranges::view::single(tr::lng_settings_call_device_default(tr::now)),
+			devices | ::ranges::view::transform(getName)
+		) | ::ranges::to_vector;
+		const auto i = ::ranges::find(
 			devices,
 			Global::CallOutputDeviceID(),
 			getId);
@@ -187,11 +187,11 @@ void Calls::setupContent(not_null<Window::SessionController*> controller) {
 		st::settingsButton
 	)->addClickHandler([=] {
 		const auto &devices = VoIP::EnumerateAudioInputs();
-		const auto options = ranges::view::concat(
-			ranges::view::single(tr::lng_settings_call_device_default(tr::now)),
-			devices | ranges::view::transform(getName)
-		) | ranges::to_vector;
-		const auto i = ranges::find(
+		const auto options = ::ranges::view::concat(
+			::ranges::view::single(tr::lng_settings_call_device_default(tr::now)),
+			devices | ::ranges::view::transform(getName)
+		) | ::ranges::to_vector;
+		const auto i = ::ranges::find(
 			devices,
 			Global::CallInputDeviceID(),
 			getId);
diff --git a/Telegram/lib_base/base/thread_safe_wrap.h b/Telegram/lib_base/base/thread_safe_wrap.h
index d5f4e4a..d7f14bd 100644
--- a/Telegram/lib_base/base/thread_safe_wrap.h
+++ b/Telegram/lib_base/base/thread_safe_wrap.h
@@ -7,6 +7,8 @@
 #pragma once
 
 #include <utility>
+#include <QMutex>
+#include <QMutexLocker>
 
 namespace base {
 
