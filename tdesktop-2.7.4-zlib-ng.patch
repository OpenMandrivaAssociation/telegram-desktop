diff -up tdesktop-2.7.4-full/Telegram/lib_base/base/zlib_help.h.omv~ tdesktop-2.7.4-full/Telegram/lib_base/base/zlib_help.h
--- tdesktop-2.7.4-full/Telegram/lib_base/base/zlib_help.h.omv~	2021-05-02 01:31:25.699111029 +0200
+++ tdesktop-2.7.4-full/Telegram/lib_base/base/zlib_help.h	2021-05-02 02:45:32.650292816 +0200
@@ -9,12 +9,18 @@
 #include <zip.h>
 #include <unzip.h>
 #include "logs.h"
+#include <zlib.h>
+
+#ifdef ZLIBNG_VERNUM
+#include <QTemporaryFile>
+#endif
 
 #ifdef small
 #undef small
 #endif // small
 
 namespace zlib {
+#ifndef ZLIBNG_VERNUM
 namespace internal {
 
 class InMemoryFile {
@@ -146,18 +152,43 @@ private:
 };
 
 } // namespace internal
+#endif
 
 constexpr int kCaseSensitive = 1;
 constexpr int kCaseInsensitive = 2;
 
+#ifdef ZLIBNG_VERNUM
+static int csCompare(unzFile file, const char *filename1, const char *filename2) {
+	return strcmp(filename1, filename2);
+}
+
+static int cisCompare(unzFile file, const char *filename1, const char *filename2) {
+	return strcasecmp(filename1, filename2);
+}
+#endif
+
 class FileToRead {
 public:
+#ifdef ZLIBNG_VERNUM
+	FileToRead(const QByteArray &content) : _tempFile() {
+		if(!_tempFile.open()) {
+			_error = -1;
+		} else {
+			_tempFile.write(content);
+			_tempFile.close();
+			if (!(_handle = unzOpen(QFile::encodeName(_tempFile.fileName()).data()))) {
+				_error = -1;
+			}
+		}
+	}
+#else
 	FileToRead(const QByteArray &content) : _data(content) {
 		auto funcs = _data.funcs();
 		if (!(_handle = unzOpen2(nullptr, &funcs))) {
 			_error = -1;
 		}
 	}
+#endif
 
 	int getGlobalInfo(unz_global_info *pglobal_info) {
 		if (error() == UNZ_OK) {
@@ -168,7 +199,11 @@ public:
 
 	int locateFile(const char *szFileName, int iCaseSensitivity) {
 		if (error() == UNZ_OK) {
+#ifdef ZLIBNG_VERNUM
+			_error = _handle ? unzLocateFile(_handle, szFileName, iCaseSensitivity ? csCompare : cisCompare) : -1;
+#else
 			_error = _handle ? unzLocateFile(_handle, szFileName, iCaseSensitivity) : -1;
+#endif
 		}
 		return error();
 	}
@@ -302,9 +337,11 @@ public:
 	}
 
 	int error() const {
+#ifndef ZLIBNG_VERNUM
 		if (auto dataError = _data.error()) {
 			return dataError;
 		}
+#endif
 		return _error;
 	}
 
@@ -317,7 +354,11 @@ public:
 	}
 
 private:
+#ifdef ZLIBNG_VERNUM
+	QTemporaryFile _tempFile;
+#else
 	internal::InMemoryFile _data;
+#endif
 	unzFile _handle = nullptr;
 	int _error = 0;
 
@@ -325,12 +366,20 @@ private:
 
 class FileToWrite {
 public:
+#ifdef ZLIBNG_VERNUM
+	FileToWrite() : _tempFile() {
+		if (!(_handle = zipOpen(QFile::encodeName(_tempFile.fileName()).data(), APPEND_STATUS_CREATE))) {
+			_error = -1;
+		}
+	}
+#else
 	FileToWrite() {
 		auto funcs = _data.funcs();
 		if (!(_handle = zipOpen2(nullptr, APPEND_STATUS_CREATE, nullptr, &funcs))) {
 			_error = -1;
 		}
 	}
+#endif
 
 	int openNewFile(
 		const char *filename,
@@ -382,14 +431,23 @@ public:
 	}
 
 	int error() const {
+#ifndef ZLIBNG_VERNUM
 		if (auto dataError = _data.error()) {
 			return dataError;
 		}
+#endif
 		return _error;
 	}
 
 	QByteArray result() const {
+#ifdef ZLIBNG_VERNUM
+		QFile f(_tempFile.fileName());
+		if(f.open(QFile::ReadOnly))
+			return f.readAll();
+		return QByteArray();
+#else
 		return _data.result();
+#endif
 	}
 
 	~FileToWrite() {
@@ -397,7 +455,11 @@ public:
 	}
 
 private:
+#ifdef ZLIBNG_VERNUM
+	QTemporaryFile _tempFile;
+#else
 	internal::InMemoryFile _data;
+#endif
 	zipFile _handle = nullptr;
 	int _error = 0;
 
diff -up tdesktop-2.7.4-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~ tdesktop-2.7.4-full/Telegram/SourceFiles/core/crash_report_window.cpp
--- tdesktop-2.7.4-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~	2021-05-02 02:53:33.573352438 +0200
+++ tdesktop-2.7.4-full/Telegram/SourceFiles/core/crash_report_window.cpp	2021-05-02 02:54:28.543961913 +0200
@@ -542,7 +542,7 @@ void LastCrashedWindow::onCheckingFinish
 
 			zlib::FileToWrite minidumpZip;
 
-			zip_fileinfo zfi = { { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
+			zip_fileinfo zfi = { 0, { 0, 0 }, 0, 0 };
 			QByteArray dmpNameUtf = dmpName.toUtf8();
 			minidumpZip.openNewFile(dmpNameUtf.constData(), &zfi, nullptr, 0, nullptr, 0, nullptr, Z_DEFLATED, Z_DEFAULT_COMPRESSION);
 			minidumpZip.writeInFile(minidump.constData(), minidump.size());
diff -up tdesktop-2.7.4-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp.omv~ tdesktop-2.7.4-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp
--- tdesktop-2.7.4-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp.omv~	2021-05-02 03:28:15.288977431 +0200
+++ tdesktop-2.7.4-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp	2021-05-02 03:28:32.662197553 +0200
@@ -357,7 +357,7 @@ bool CopyColorsToPalette(
 [[nodiscard]] QByteArray PackTheme(const ParsedTheme &parsed) {
 	zlib::FileToWrite zip;
 
-	zip_fileinfo zfi = { { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
+	zip_fileinfo zfi = { 0, { 0, 0 }, 0, 0 };
 	const auto back = std::string(parsed.tiled ? "tiled" : "background")
 		+ (parsed.isPng ? ".png" : ".jpg");
 	zip.openNewFile(
diff -up tdesktop-4.15.6-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~ tdesktop-4.15.6-full/Telegram/SourceFiles/core/crash_report_window.cpp
--- tdesktop-4.15.6-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~	2024-03-31 01:26:39.209532819 +0100
+++ tdesktop-4.15.6-full/Telegram/SourceFiles/core/crash_report_window.cpp	2024-03-31 01:26:48.785630918 +0100
@@ -23,6 +23,8 @@ https://github.com/telegramdesktop/tdesk
 #include <QtCore/QStandardPaths>
 #include <QtCore/QTimer>
 
+#define Z_DEFAULT_COMPRESSION -1
+
 namespace {
 
 constexpr auto kDefaultProxyPort = 80;
