diff -up tdesktop-2.7.9-full/Telegram/lib_base/base/openssl_help.h.omv~ tdesktop-2.7.9-full/Telegram/lib_base/base/openssl_help.h
--- tdesktop-2.7.9-full/Telegram/lib_base/base/openssl_help.h.omv~	2021-06-21 17:55:46.854877200 +0200
+++ tdesktop-2.7.9-full/Telegram/lib_base/base/openssl_help.h	2021-06-21 18:12:03.420101458 +0200
@@ -28,6 +28,12 @@ extern "C" {
 #undef small
 #endif // small
 
+#if OPENSSL_VERSION_MAJOR >= 3
+#define SHA1 "SHA1"
+#define SHA256 "SHA256"
+#define SHA512 "SHA512"
+#endif
+
 namespace openssl {
 
 class Context {
@@ -414,6 +420,7 @@ inline void ShaUpdate(Context context, M
 	ShaUpdate(context, method, args...);
 }
 
+#if OPENSSL_VERSION_MAJOR < 3
 template <size_type Size, typename Method>
 inline void Sha(
 		bytes::span dst,
@@ -426,6 +433,21 @@ inline void Sha(
 		data.size(),
 		reinterpret_cast<unsigned char*>(dst.data()));
 }
+#else
+template <size_type Size>
+inline void Sha(
+		bytes::span dst,
+		char const * const method,
+		bytes::const_span data) {
+	Expects(dst.size() >= Size);
+
+	EVP_Q_digest(NULL, method, NULL,
+		reinterpret_cast<const unsigned char*>(data.data()),
+		data.size(),
+		reinterpret_cast<unsigned char*>(dst.data()),
+		NULL);
+}
+#endif
 
 template <size_type Size, typename Method>
 [[nodiscard]] inline bytes::vector Sha(
diff -up tdesktop-2.7.9-full/Telegram/lib_base/base/zlib_help.h.omv~ tdesktop-2.7.9-full/Telegram/lib_base/base/zlib_help.h
--- tdesktop-2.7.9-full/Telegram/lib_base/base/zlib_help.h.omv~	2021-06-21 18:29:30.294225688 +0200
+++ tdesktop-2.7.9-full/Telegram/lib_base/base/zlib_help.h	2021-06-21 18:51:37.905984716 +0200
@@ -14,6 +14,11 @@
 #undef small
 #endif // small
 
+typedef void* voidp;
+typedef void* voidpf;
+typedef unsigned int uInt;
+typedef unsigned long uLong;
+
 namespace zlib {
 namespace internal {
 
@@ -150,6 +155,13 @@ private:
 constexpr int kCaseSensitive = 1;
 constexpr int kCaseInsensitive = 2;
 
+static inline int CaseSensitiveCompare(unzFile file, const char *filename1, const char *filename2) {
+	return strcmp(filename1, filename2);
+}
+static inline int CaseInsensitiveCompare(unzFile file, const char *filename1, const char *filename2) {
+	return strcasecmp(filename1, filename2);
+}
+
 class FileToRead {
 public:
 	FileToRead(const QByteArray &content) : _data(content) {
@@ -168,7 +180,7 @@ public:
 
 	int locateFile(const char *szFileName, int iCaseSensitivity) {
 		if (error() == UNZ_OK) {
-			_error = _handle ? unzLocateFile(_handle, szFileName, iCaseSensitivity) : -1;
+			_error = _handle ? unzLocateFile(_handle, szFileName, iCaseSensitivity ? CaseSensitiveCompare : CaseInsensitiveCompare) : -1;
 		}
 		return error();
 	}
diff -up tdesktop-2.7.9-full/Telegram/lib_spellcheck/spellcheck/third_party/hunspell_controller.cpp.omv~ tdesktop-2.7.9-full/Telegram/lib_spellcheck/spellcheck/third_party/hunspell_controller.cpp
--- tdesktop-2.7.9-full/Telegram/lib_spellcheck/spellcheck/third_party/hunspell_controller.cpp.omv~	2021-06-21 18:14:07.827990827 +0200
+++ tdesktop-2.7.9-full/Telegram/lib_spellcheck/spellcheck/third_party/hunspell_controller.cpp	2021-06-21 18:24:02.651335297 +0200
@@ -8,7 +8,10 @@
 #include "spellcheck/third_party/hunspell_controller.h"
 
 #include "hunspell/hunspell.hxx"
-#include "hunspell/csutil.hxx"
+//#include "hunspell/csutil.hxx"
+// from hunspell, but not exported in any header that gets installed by "make install"
+extern void initialize_utf_tbl();
+extern void free_utf_tbl();
 #include "spellcheck/spellcheck_value.h"
 
 #include <mutex>
diff -up tdesktop-2.7.9-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~ tdesktop-2.7.9-full/Telegram/SourceFiles/core/crash_report_window.cpp
--- tdesktop-2.7.9-full/Telegram/SourceFiles/core/crash_report_window.cpp.omv~	2021-06-21 18:42:04.572475092 +0200
+++ tdesktop-2.7.9-full/Telegram/SourceFiles/core/crash_report_window.cpp	2021-06-21 18:43:55.438118196 +0200
@@ -592,8 +592,11 @@ void LastCrashedWindow::checkingFinished
 
 			zlib::FileToWrite minidumpZip;
 
-			zip_fileinfo zfi = { { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
+			zip_fileinfo zfi = { 0, { 0, 0 }, 0, 0 }; //{ { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
 			QByteArray dmpNameUtf = dmpName.toUtf8();
+#ifndef Z_DEFAULT_COMPRESSION
+#define Z_DEFAULT_COMPRESSION -1
+#endif
 			minidumpZip.openNewFile(dmpNameUtf.constData(), &zfi, nullptr, 0, nullptr, 0, nullptr, Z_DEFLATED, Z_DEFAULT_COMPRESSION);
 			minidumpZip.writeInFile(minidump.constData(), minidump.size());
 			minidumpZip.closeFile();
diff -up tdesktop-2.7.9-full/Telegram/SourceFiles/payments/ui/payments_panel.cpp.omv~ tdesktop-2.7.9-full/Telegram/SourceFiles/payments/ui/payments_panel.cpp
--- tdesktop-2.7.9-full/Telegram/SourceFiles/payments/ui/payments_panel.cpp.omv~	2021-06-21 18:24:56.130730407 +0200
+++ tdesktop-2.7.9-full/Telegram/SourceFiles/payments/ui/payments_panel.cpp	2021-06-21 18:34:48.709265497 +0200
@@ -24,6 +24,7 @@ https://github.com/telegramdesktop/tdesk
 #include "webview/webview_interface.h"
 #include "styles/style_payments.h"
 #include "styles/style_layers.h"
+#include <QJsonDocument>
 
 namespace Payments::Ui {
 namespace {
diff -up tdesktop-2.7.9-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp.omv~ tdesktop-2.7.9-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp
--- tdesktop-2.7.9-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp.omv~	2021-06-21 18:49:23.014125822 +0200
+++ tdesktop-2.7.9-full/Telegram/SourceFiles/window/themes/window_theme_editor_box.cpp	2021-06-21 18:50:41.235622147 +0200
@@ -48,6 +48,10 @@ https://github.com/telegramdesktop/tdesk
 
 #include <QtCore/QBuffer>
 
+#ifndef Z_DEFAULT_COMPRESSION
+#define Z_DEFAULT_COMPRESSION (-1)
+#endif
+
 namespace Window {
 namespace Theme {
 namespace {
@@ -357,7 +361,7 @@ bool CopyColorsToPalette(
 [[nodiscard]] QByteArray PackTheme(const ParsedTheme &parsed) {
 	zlib::FileToWrite zip;
 
-	zip_fileinfo zfi = { { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
+	zip_fileinfo zfi = { 0, { 0, 0 }, 0, 0 }; //{ { 0, 0, 0, 0, 0, 0 }, 0, 0, 0 };
 	const auto back = std::string(parsed.tiled ? "tiled" : "background")
 		+ (parsed.isPng ? ".png" : ".jpg");
 	zip.openNewFile(
diff -up tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceHelper.cpp.omv~ tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceHelper.cpp
--- tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceHelper.cpp.omv~	2021-06-21 18:12:59.693502534 +0200
+++ tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceHelper.cpp	2021-06-21 18:13:08.363564513 +0200
@@ -24,7 +24,7 @@
 #include "modules/desktop_capture/desktop_capturer.h"
 #include "system_wrappers/include/clock.h"
 #include "api/video/i420_buffer.h"
-#include "third_party/libyuv/include/libyuv.h"
+#include <libyuv.h>
 
 #ifdef WEBRTC_MAC
 #import <QuartzCore/QuartzCore.h>
diff -up tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceManager.cpp.omv~ tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceManager.cpp
--- tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceManager.cpp.omv~	2021-06-21 18:12:44.796396152 +0200
+++ tdesktop-2.7.9-full/Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/DesktopCaptureSourceManager.cpp	2021-06-21 18:12:53.876460977 +0200
@@ -10,7 +10,7 @@
 
 #include "modules/desktop_capture/desktop_and_cursor_composer.h"
 #include "modules/desktop_capture/desktop_capturer_differ_wrapper.h"
-#include "third_party/libyuv/include/libyuv.h"
+#include <libyuv.h>
 #include "api/video/i420_buffer.h"
 #include "tgcalls/desktop_capturer/DesktopCaptureSourceHelper.h"
 
